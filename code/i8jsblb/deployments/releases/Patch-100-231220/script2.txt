Insert into USER_PERMISSION (USER_PERMISSION_ID,NAME,IS_READ_AVAILABLE,IS_UPDATE_AVAILABLE,IS_DELETE_AVAILABLE,IS_CREATE_AVAILABLE,DESCRIPTION,COMMENTS,CREATED_BY,UPDATED_BY,CREATED_ON,UPDATED_ON,VERSION_NO,SHORT_NAME,IS_DEFAULT,USER_PERMISSION_SECTION_ID,SEQUENCE_NO) values (459,'--- Mark Account As Saving',1,1,0,0,'Manage Account Type',null,2,2,to_date('08-DEC-21','DD-MON-RR'),to_date('08-DEC-21','DD-MON-RR'),0,'MNG_ACC_SVNG',0,10,16);

Insert into PERMISSION_GROUP_DETAIL (PERMISSION_GROUP_DETAIL_ID,USER_PERMISSION_ID,PERMISSION_GROUP_ID,DESCRIPTION,COMMENTS,CREATED_BY,UPDATED_BY,CREATED_ON,UPDATED_ON,VERSION_NO) values (PERMISSION_GROUP_DETAIL_seq.nextVal,459,7,'Manage Account Type',null,2,2,to_date('08-DEC-21','DD-MON-RR'),to_date('08-DEC-21','DD-MON-RR'),0);


Create table sal_act_profit_removed as select * from salaried_account_profit;

commit;


create or replace TRIGGER CUS_ACNT_NATURE_TRG  
  AFTER  INSERT OR UPDATE
  ON CUSTOMER   
  REFERENCING NEW AS NEW OLD AS OLD
  FOR EACH ROW
   WHEN (
NEW.AC_NATURE <> OLD.AC_NATURE
      )

DECLARE
  counter number(10);
  var_account_id number;
  var_account_holder_id number;
  var_cnic varchar2(20);

  BEGIN

if :NEW.AC_NATURE is not null AND  :NEW.AC_NATURE = 1 then

SELECT COUNT(*) INTO counter from SALARIED_ACCOUNT_PROFIT where MOBILE_NO = :NEW.MOBILE_NO;

    if(counter>0) then


        INSERT INTO SAL_ACT_PROFIT_REMOVED SELECT * FROM SALARIED_ACCOUNT_PROFIT where MOBILE_NO = :NEW.MOBILE_NO;

        UPDATE SAL_ACT_PROFIT_REMOVED SET LAST_CREATED_ON = SYSDATE, LAST_UPDATED_ON = SYSDATE WHERE  mobile_no = :NEW.AC_NATURE;

        DELETE FROM SALARIED_ACCOUNT_PROFIT where MOBILE_NO = :NEW.MOBILE_NO;


    end if ;


end if ;

if :NEW.AC_NATURE is not null AND :NEW.AC_NATURE = 2 then 

SELECT COUNT(*) INTO counter from SALARIED_ACCOUNT_PROFIT where MOBILE_NO = :NEW.MOBILE_NO;

    if (counter = 0 )then
        select account_id into var_account_id from account where account_holder_id in (select  Account_holder_id from account_holder where 
        mobile_number  = :NEW.MOBILE_NO) And Customer_account_type_id in ('2','1') AND STATUS_ID = '1' and ROWNUM = 1;
    end if;

    if (counter = 0 AND var_account_id is not null ) then
          select account_holder_id into var_account_holder_id from account where account_id = var_account_id;    
          select cnic into var_cnic from account_holder where account_holder_id = var_account_holder_id;   
          INSERT INTO SALARIED_ACCOUNT_PROFIT(ID, MOBILE_NO, CNIC,PROFIT_CALCULATED_AMOUNT, CREDIT_UPDATED_ON, DEBIT_UPDATED_ON,LAST_CREATED_ON,LAST_UPDATED_ON,ACCOUNT_ID)
          VALUES(SALARIED_ACCOUNT_PROFIT_SEQ.NEXTVAL, :NEW.MOBILE_NO, var_cnic, 0, SYSDATE,SYSDATE, SYSDATE,SYSDATE,var_account_id);
    end if ;
end if;

END CUS_ACNT_NATURE_TRG;


commit;