
  CREATE OR REPLACE FORCE VIEW "I8_MICROBANK_JS_PROD"."EXPIRED_NIC_LIST_VIEW" ("PK", "CITY", "CARD_NO", "SEGMENT_ID", "SEGMENT", "TAX_REGIME", "USER_TYPE", "USER_ID", "CUSTOMER_ACCOUNT_TYPE_ID", "ACCOUNT_TYPE", "ACCOUNT_NUMBER", "FIRST_NAME", "LAST_NAME", "BUSINESS_NAME", "MOBILE_NO", "NIC", "ACCOUNT_OPENING_DATE", "LAST_ACTIVITY_DATE", "NIC_EXPIRY_DATE", "REGISTRATION_STATE_ID", "REGISTRATION_STATE", "ACCOUNT_STATUS") AS 
  WITH LAST_TRNX_DATE
           AS (  SELECT ACCOUNT_ID, MAX (TRANSACTION_TIME) LAST_ACTIVITY_DATE
                   FROM LEDGER A, ACCOUNT B
                  WHERE (FROM_ACCOUNT_ID = ACCOUNT_ID
                         OR TO_ACCOUNT_ID = ACCOUNT_ID)
                        AND CUSTOMER_ACCOUNT_TYPE_ID NOT IN (3, 9)
               GROUP BY ACCOUNT_ID)
   SELECT A.APP_USER_ID PK,
   A.CITY,
   DC.CARD_NO,
   CUST.SEGMENT_ID,
   SEG.NAME AS SEGMENT,
   TR.NAME AS TAX_REGIME,
          G.NAME USER_TYPE,
          B.USER_ID,
          F.CUSTOMER_ACCOUNT_TYPE_ID,
          F.NAME ACCOUNT_TYPE,
           TRIM
          (
             REGEXP_REPLACE
             (
                ' ' || TRIM (TRANSLATE (ACCOUNT_NUMBER, 'DEL', ' ')),
                '(.).',
                '\1'
             )
          ) ACCOUNT_NUMBER,
          A.FIRST_NAME,
          A.LAST_NAME,
          CASE
             WHEN A.APP_USER_TYPE_ID = 3
             THEN
                (SELECT BUSINESS_NAME
                   FROM RETAILER_CONTACT
                  WHERE RETAILER_CONTACT.
                         RETAILER_CONTACT_ID = A.RETAILER_CONTACT_ID)
          END
             BUSINESS_NAME,
          A.MOBILE_NO,
          A.NIC,
          A.CREATED_ON ACCOUNT_OPENING_DATE,
          LAST_ACTIVITY_DATE LAST_ACTIVITY_DATE,
          NIC_EXPIRY_DATE,
          A.REGISTRATION_STATE_ID,
          E.NAME REGISTRATION_STATE,
          CASE
             WHEN A.IS_CLOSED_UNSETTLED = 0 AND A.IS_CLOSED_SETTLED = 0
             THEN
                'OPEN'
             WHEN A.IS_CLOSED_UNSETTLED = 1 AND A.IS_CLOSED_SETTLED = 0
             THEN
                'CLOSED UNSETTLED'
             WHEN A.IS_CLOSED_UNSETTLED = 1 AND A.IS_CLOSED_SETTLED = 1
             THEN
                'CLOSED SETTLED'
          END
             ACCOUNT_STATUS
     FROM APP_USER A,
          USER_DEVICE_ACCOUNTS B,
          ACCOUNT_HOLDER C,
          ACCOUNT D,
          REGISTRATION_STATE E,
          OLA_CUSTOMER_ACCOUNT_TYPE F,
          APP_USER_TYPE G,
          LAST_TRNX_DATE I,
          DEBIT_CARD DC,
          CUSTOMER CUST,
          SEGMENT SEG,
          TAX_REGIME TR
    WHERE     A.APP_USER_ID = B.APP_USER_ID
          AND DEVICE_TYPE_ID = 5
          AND A.MOBILE_NO = C.MOBILE_NUMBER(+)
          AND A.NIC = C.CNIC(+)
          AND NIC_EXPIRY_DATE < SYSDATE
          AND D.ACCOUNT_ID = I.ACCOUNT_ID(+)
          AND C.ACCOUNT_HOLDER_ID = D.ACCOUNT_HOLDER_ID
          AND A.REGISTRATION_STATE_ID = E.REGISTRATION_STATE_ID
          AND D.CUSTOMER_ACCOUNT_TYPE_ID = F.CUSTOMER_ACCOUNT_TYPE_ID
          AND A.APP_USER_TYPE_ID = G.APP_USER_TYPE_ID
          AND A.APP_USER_ID=DC.APP_USER_ID(+)
          AND CUST.CUSTOMER_ID(+)=A.CUSTOMER_ID
          AND SEG.SEGMENT_ID=CUST.SEGMENT_ID
          AND TR.TAX_REGIME_ID(+)=CUST.TAX_REGIME_ID
          AND D.CUSTOMER_ACCOUNT_TYPE_ID NOT IN (3, 9,4)
          AND A.APP_USER_TYPE_ID IN (2, 3)
          AND A.IS_CLOSED_SETTLED = 0
          AND A.IS_CLOSED_UNSETTLED = 0
   UNION ALL
   SELECT A.APP_USER_ID PK,
      A.CITY,
      DC.CARD_NO,
      NULL AS SEGMENT_ID,
      NULL AS SEGMENT,
      NULL AS TAX_REGIME,
          G.NAME USER_TYPE,
          B.USER_ID,
          F.CUSTOMER_ACCOUNT_TYPE_ID,
          F.NAME ACCOUNT_TYPE,
           TRIM
          (
             REGEXP_REPLACE
             (
                ' ' || TRIM (TRANSLATE (ACCOUNT_NUMBER, 'DEL', ' ')),
                '(.).',
                '\1'
            )
          )  ACCOUNT_NUMBER,
          A.FIRST_NAME,
          A.LAST_NAME,
          CASE
             WHEN A1.APP_USER_TYPE_ID = 3
             THEN
                (SELECT BUSINESS_NAME
                   FROM RETAILER_CONTACT
                  WHERE RETAILER_CONTACT.
                         RETAILER_CONTACT_ID = A1.RETAILER_CONTACT_ID)
          END
             BUSINESS_NAME,
          A.MOBILE_NO,
          A.NIC,
          A.CREATED_ON ACCOUNT_OPENING_DATE,
          LAST_ACTIVITY_DATE LAST_ACTIVITY_DATE,
          A.NIC_EXPIRY_DATE,
          A.REGISTRATION_STATE_ID,
          E.NAME REGISTRATION_STATE,
          CASE
             WHEN A.IS_CLOSED_UNSETTLED = 0 AND A.IS_CLOSED_SETTLED = 0
             THEN
               'OPEN'
             WHEN A.IS_CLOSED_UNSETTLED = 1 AND A.IS_CLOSED_SETTLED = 0
             THEN
                'CLOSED UNSETTLED'
             WHEN A.IS_CLOSED_UNSETTLED = 1 AND A.IS_CLOSED_SETTLED = 1
             THEN
                'CLOSED SETTLED'
          END
             ACCOUNT_STATUS
     FROM APP_USER A,
          USER_DEVICE_ACCOUNTS B,
          HANDLER B1,
          APP_USER A1,
          ACCOUNT_HOLDER C,
          ACCOUNT D,
          REGISTRATION_STATE E,
          OLA_CUSTOMER_ACCOUNT_TYPE F,
          APP_USER_TYPE G,
          LAST_TRNX_DATE I,
          DEBIT_CARD DC
    WHERE     A.APP_USER_ID = B.APP_USER_ID
          AND DEVICE_TYPE_ID = 5
          AND A1.MOBILE_NO = C.MOBILE_NUMBER
          AND A1.NIC = C.CNIC
          AND A.NIC_EXPIRY_DATE < SYSDATE
          AND A.HANDLER_ID = B1.HANDLER_ID
          AND B1.PRIMARY_RETAILER_CONTACT_ID = A1.RETAILER_CONTACT_ID
          AND D.ACCOUNT_ID = I.ACCOUNT_ID(+)
          AND C.ACCOUNT_HOLDER_ID = D.ACCOUNT_HOLDER_ID
          AND A1.REGISTRATION_STATE_ID = E.REGISTRATION_STATE_ID
          AND D.CUSTOMER_ACCOUNT_TYPE_ID = F.CUSTOMER_ACCOUNT_TYPE_ID
          AND A.APP_USER_TYPE_ID = G.APP_USER_TYPE_ID
          AND A.APP_USER_ID=DC.APP_USER_ID(+)
          AND D.CUSTOMER_ACCOUNT_TYPE_ID NOT IN (3, 9,4)
          AND A.APP_USER_TYPE_ID = 12
          AND A.IS_CLOSED_SETTLED = 0
          AND A.IS_CLOSED_UNSETTLED = 0;

