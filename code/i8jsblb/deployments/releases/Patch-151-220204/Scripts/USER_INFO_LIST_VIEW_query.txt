
  CREATE OR REPLACE FORCE VIEW "I8_MICROBANK_JS_DEV"."USER_INFO_LIST_VIEW" ("DEBIT_CARD_NO", "ACCOUNT_NUMBER", "TAX_REGIME", "TAX_STATUS", "ACCOUNT_CLOSED_ON", "APPLICATION_N0", "BALANCE", "DEBIT_CARD_REQUEST_INITIATED", "DEBIT_CARD_REQUEST_ACTION_ID", "SALES_USER", "APP_USER_ID", "NAME", "ACCOUNT_STATE_ID", "FIRST_NAME", "LAST_NAME", "ADDRESS1", "ADDRESS2", "CITY", "DOB", "NIC", "IS_VERIFIED", "USER_ID", "MOBILE_NO", "STATE", "COUNTRY", "ACCOUNT_TITLE", "REGION_ID", "REGION_NAME", "AREA_ID", "AREA_NAME", "AREA_LEVEL_ID", "AREA_LEVEL_NAME", "DISTRIBUTOR_ID", "AGENT_NETWORK_NAME", "BUSINESS_CITY_ID", "BUSINESS_CITY_NAME", "ACCOUNT_PURPOSE_ID", "BUSINESS_NAME", "ACCOUNT_STATE_NAME", "SEGMENT", "IS_ACCOUNT_ENABLED", "IS_ACCOUNT_CLOSED", "USER_DEVICE_ACCOUNTS_ID", "FULL_ADDRESS", "FULL_ADDRESS_CITY", "FULL_NAME", "CUSTOMER_ACCOUNT_TYPE", "CUSTOMER_ACCOUNT_TYPE_ID", "IS_ACCOUNT_LOCKED", "IS_CREDENTIALS_EXPIRED", "DISTRICT", "ACCOUNT_OPENED_BY", "ACCOUNT_OPENER_NAME", "ACCOUNT_OPENER_ID", "ACCOUNT_OPENING_DATE", "REGISTRATION_STATE_ID", "REGISTRATION_STATE", "INITIAL_APP_FORM_NUMBER", "ACCOUNT_OPENING_METHOD_ID", "ACCOUNT_OPENING_METHOD_NAME", "UPDATED_ON", "UPDATED_BY", "MOBILE_NETWORK_ID", "CUST_MOBILE_NETWORK", "IBAN", "COMPANY_NAME", "STOCK_TRADING", "MUTUAL_FUNDS", "CLS_RESPONSE_CODE") AS 
  SELECT DISTINCT DC.CARD_NO AS DEBIT_CARD_NO,
    TRIM
          (
             REGEXP_REPLACE
             (
                ' ' || TRIM (TRANSLATE (ac.ACCOUNT_NUMBER, 'DEL', ' ')),
                '(.).',
                '\1'
             )
          )
             ACCOUNT_NUMBER,
  TR.NAME AS TAX_REGIME,
  CASE WHEN APP_USER.IS_FILER='0' THEN 'NON FILER'
  WHEN APP_USER.IS_FILER='1' THEN 'FILER' END
  AS TAX_STATUS,
  APP_USER.ACCOUNT_CLOSED_ON,
  CUST.APPLICATION_N0,
  ac.BALANCE,
(case when ath.action_athorization_id is null then 'NO' ELSE 'YES' END) AS DEBIT_CARD_REQUEST_INITIATED,
  ath.action_athorization_id AS DEBIT_CARD_REQUEST_ACTION_ID,
  APP_USER.first_name || ' ' || APP_USER.last_name AS SALES_USER,
  APP_USER.APP_USER_ID,
MOBILE_TYPE.NAME,
APP_USER.ACCOUNT_STATE_ID,
APP_USER.FIRST_NAME,
APP_USER.LAST_NAME,
APP_USER.ADDRESS1,
APP_USER.ADDRESS2,
APP_USER.CITY,
APP_USER.DOB,
APP_USER.NIC,
APP_USER.IS_VERIFIED,
USER_DEVICE_ACCOUNTS.USER_ID,
app_user.MOBILE_No,
APP_USER.STATE,
APP_USER.COUNTRY,
APP_USER.FIRST_NAME || ' ' || APP_USER.LAST_NAME AS ACCOUNT_TITLE,
AMD.REGION_ID,
REGION.REGION_NAME,
AMD.AREA_ID,
AREA.NAME AREA_NAME,
AMD.AREA_LEVEL_ID,
AREA_LEVEL.AREA_LEVEL_NAME,
AMD.DISTRIBUTOR_ID,
DIST.NAME AS AGENT_NETWORK_NAME,
AD.CITY_ID AS BUSINESS_CITY_ID,
CITY.NAME AS BUSINESS_CITY_NAME,
CUST.ACCOUNT_PURPOSE_ID,
CASE
WHEN (SELECT APP_USER_TYPE_ID
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY) = 3
THEN
(SELECT BUSINESS_NAME
FROM RETAILER_CONTACT
WHERE RETAILER_CONTACT_ID IN
(SELECT RETAILER_CONTACT_ID
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY))
ELSE
NULL
END
AS BUSINESS_NAME,
ACCOUNT_STATE.NAME AS ACCOUNT_STATE_NAME,
SEGMENT.NAME AS SEGMENT,
(CASE
WHEN USER_DEVICE_ACCOUNTS.IS_ACCOUNT_ENABLED = 1
THEN
'ACTIVATED'
WHEN USER_DEVICE_ACCOUNTS.IS_ACCOUNT_ENABLED = 0
THEN
'DE-ACTIVATED'
END)
AS IS_ACCOUNT_ENABLED,
(CASE
WHEN APP_USER.IS_CLOSED_UNSETTLED = 0
AND APP_USER.IS_CLOSED_SETTLED = 0
THEN
'OPEN'
WHEN APP_USER.IS_CLOSED_UNSETTLED = 1
AND APP_USER.IS_CLOSED_SETTLED = 0
THEN
'CLOSED UNSETTLED'
WHEN APP_USER.IS_CLOSED_UNSETTLED = 1
AND APP_USER.IS_CLOSED_SETTLED = 1
THEN
'CLOSED SETTLED'
END)
AS IS_ACCOUNT_CLOSED,
USER_DEVICE_ACCOUNTS.USER_DEVICE_ACCOUNTS_ID,
AUNA.FULL_ADDRESS,
AUNA.NAME AS FULL_ADDRESS_CITY,
AUNA.FULL_NAME,
CAT.NAME AS CUSTOMER_ACCOUNT_TYPE,
CAT.CUSTOMER_ACCOUNT_TYPE_ID,
(CASE
WHEN USER_DEVICE_ACCOUNTS.IS_ACCOUNT_LOCKED = 0 THEN 'UNLOCKED'
WHEN USER_DEVICE_ACCOUNTS.IS_ACCOUNT_LOCKED = 1 THEN 'LOCKED'
END)
AS IS_ACCOUNT_LOCKED,
(CASE
WHEN USER_DEVICE_ACCOUNTS.IS_CREDENTIALS_EXPIRED = 0
THEN
'NOT EXPIRED'
WHEN USER_DEVICE_ACCOUNTS.IS_CREDENTIALS_EXPIRED = 1
THEN
'EXPIRED'
END)
AS IS_CREDENTIALS_EXPIRED,
(SELECT NAME
FROM DISTRICT D, ADDRESS A, CUSTOMER_ADDRESSES C
WHERE D.DISTRICT_ID = A.DISTRICT_ID
AND A.ADDRESS_ID = C.ADDRESS_ID
AND C.ADDRESS_TYPE_ID = 1
AND C.CUSTOMER_ID = CUST.CUSTOMER_ID)
AS DISTRICT,
CASE
WHEN (SELECT APP_USER_TYPE_ID
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY) = 3
THEN
(SELECT USER_ID
FROM USER_DEVICE_ACCOUNTS
WHERE APP_USER_ID = CUST.CREATED_BY AND DEVICE_TYPE_ID = 5)
ELSE
(SELECT USERNAME
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY)
END
AS ACCOUNT_OPENED_BY,
CASE
WHEN (SELECT APP_USER_TYPE_ID
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY) = 3
THEN
(SELECT NAME
FROM RETAILER_HIERARCHY_VIEW
WHERE APP_USER_ID = CUST.CREATED_BY)
ELSE
'Bank Back Office'
END
AS ACCOUNT_OPENER_NAME,
(SELECT APP_USER_ID
FROM APP_USER
WHERE APP_USER_ID = CUST.CREATED_BY)
AS ACCOUNT_OPENER_ID,
CUST.CREATED_ON AS ACCOUNT_OPENING_DATE,
APP_USER.REGISTRATION_STATE_ID,
REGISTRATION_STATE.NAME AS REGISTRATION_STATE,
NVL (CUST.INITIAL_APP_FORM_NUMBER, KYC.INITIAL_APP_FORM_NUMBER)
AS INITIAL_APP_FORM_NUMBER,
CASE
WHEN CUST.ACCOUNT_OPENING_METHOD_ID IS NULL THEN 1
ELSE CUST.ACCOUNT_OPENING_METHOD_ID
END
AS ACCOUNT_OPENING_METHOD_ID,
NVL
(
(CASE
WHEN CUST.ACCOUNT_OPENING_METHOD_ID IN (3, 4, 5)
THEN
'Web Service'
ELSE
(SELECT NAME
FROM ACCOUNT_OPENING_METHOD
WHERE ACCOUNT_OPENING_METHOD_ID =
CUST.ACCOUNT_OPENING_METHOD_ID)
END),
(SELECT NAME
FROM ACCOUNT_OPENING_METHOD
WHERE ACCOUNT_OPENING_METHOD_ID = 1)
)
AS ACCOUNT_OPENING_METHOD_NAME,
CUST.UPDATED_ON,
(SELECT USERNAME
FROM APP_USER
WHERE APP_USER_ID = CUST.UPDATED_BY)
UPDATED_BY,
MOBNETWORK.MOBILE_NETWORK_ID,
APP_USER.CUST_MOB_NETWORK,
CUST.IBAN,
COMPANY_NAME,
CUST.STOCK_TRADING,
CUST.MUTUAL_FUNDS,
CUST.CLS_RESPONSE_CODE
FROM APP_USER,
APP_USER AU,
REGISTRATION_STATE,
AREA,
AREA_LEVEL,
DISTRIBUTOR DIST,
MOBILE_TYPE,
OLA_CUSTOMER_ACCOUNT_TYPE CAT,
USER_DEVICE_ACCOUNTS,
APP_USER_NAME_ADDR_VIEW AUNA,
CUSTOMER CUST,
ACCOUNT_STATE,
AGENT_MERCHANT_DETAIL AMD,
SEGMENT,
KYC,
REGION,
RETAILER_CONTACT RC,
RETAILER_CONTACT_ADDRESSES RCADD,
ADDRESS AD,
MOBILE_NETWORKS MOBNETWORK,
CITY,
DEBIT_CARD DC,
TAX_REGIME TR,
account_holder ah,
account ac,
action_authorization ath
WHERE (cast(regexp_replace(ath.reference_id(+), '[^0-9]+', '') as number))=app_user.app_user_id
and ac.account_holder_id(+)=ah.account_holder_id
and ah.mobile_number=app_user.mobile_no
and CUST.TAX_REGIME_ID=TR.TAX_REGIME_ID
AND DC.APP_USER_ID(+)=APP_USER.APP_USER_ID
AND REGISTRATION_STATE.REGISTRATION_STATE_ID(+) =
APP_USER.REGISTRATION_STATE_ID
AND MOBILE_TYPE.MOBILE_TYPE_ID(+) = APP_USER.MOBILE_TYPE_ID
AND CAT.CUSTOMER_ACCOUNT_TYPE_ID(+) = CUST.CUSTOMER_ACCOUNT_TYPE_ID
AND APP_USER.CUSTOMER_ID = CUST.CUSTOMER_ID(+)
AND CUST.INITIAL_APP_FORM_NUMBER = KYC.INITIAL_APP_FORM_NUMBER(+)
AND APP_USER.APP_USER_ID = USER_DEVICE_ACCOUNTS.APP_USER_ID(+)
AND APP_USER.APP_USER_TYPE_ID(+) = 2
AND APP_USER.ACCOUNT_STATE_ID = ACCOUNT_STATE.ACCOUNT_STATE_ID(+)
AND CUST.SEGMENT_ID = SEGMENT.SEGMENT_ID(+)
AND USER_DEVICE_ACCOUNTS.DEVICE_TYPE_ID(+) = 5
AND AUNA.APP_USER_ID(+) = APP_USER.APP_USER_ID
AND AREA.AREA_ID(+) = AMD.AREA_ID
AND AREA_LEVEL.AREA_LEVEL_ID(+) = AMD.AREA_LEVEL_ID
AND REGION.REGION_ID(+) = AMD.REGION_ID
AND DIST.DISTRIBUTOR_ID(+) = AMD.DISTRIBUTOR_ID
AND AMD.INITIAL_APP_FORM_NUMBER(+) = RC.INITIAL_APP_FORM_NUMBER
AND CUST.CREATED_BY = AU.APP_USER_ID(+)
AND AU.RETAILER_CONTACT_ID = RC.RETAILER_CONTACT_ID(+)
AND RC.RETAILER_CONTACT_ID = RCADD.RETAILER_CONTACT_ID(+)
AND RCADD.ADDRESS_ID = AD.ADDRESS_ID(+)
AND AD.CITY_ID = CITY.CITY_ID(+)
AND CAT.IS_CUSTOMER_ACCOUNT_TYPE = 1
AND CAT.CUSTOMER_ACCOUNT_TYPE_ID NOT IN (3, 9)
AND RCADD.ADDRESS_TYPE_ID(+) = 5
AND APP_USER.CUST_MOB_NETWORK = MOBNETWORK.NAME(+);

