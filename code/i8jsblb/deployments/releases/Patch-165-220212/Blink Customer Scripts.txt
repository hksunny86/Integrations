CREATE TABLE "BLINK_CUSTOMER" 
   (	"BLINK_CUSTOMER_ID" NUMBER, 
	"MOBILE_NO" VARCHAR2(50 BYTE), 
	"CNIC" VARCHAR2(50 BYTE), 
	"CONSUMER_NAME" VARCHAR2(50 BYTE), 
	"FATHER_HUSBAND_NAME" VARCHAR2(50 BYTE), 
	"GENDER" VARCHAR2(50 BYTE), 
	"CNIC_ISSUANCE_DATE" DATE, 
	"DOB" DATE, 
	"BIRTH_PLACE" VARCHAR2(50 BYTE), 
	"MOTHER_MAIDEN_NAME" VARCHAR2(50 BYTE), 
	"EMAIL_ADDRESS" VARCHAR2(50 BYTE), 
	"MAILING_ADDRESS" VARCHAR2(50 BYTE), 
	"PERMANENT_ADDRESS" VARCHAR2(50 BYTE), 
	"PURPOSE_OF_ACCOUNT" VARCHAR2(50 BYTE), 
	"SOURCE_OF_INCOME" VARCHAR2(50 BYTE), 
	"EXPECTED_MONTHLY_TURNOVER" VARCHAR2(50 BYTE), 
	"NEXT_OF_KIN" VARCHAR2(50 BYTE), 
	"PICTURE" BLOB,  
	"LATITUDE" NUMBER, 
	"LONGITUDE" NUMBER, 
	"ACC_UPDATE" NUMBER(1,0), 
	"CUSTOMER_ID" NUMBER, 
	"PICTURE_TYPE_ID" NUMBER NOT NULL ENABLE, 
	"CREATED_BY" NUMBER(10,0) NOT NULL ENABLE, 
	"UPDATED_BY" NUMBER(10,0) NOT NULL ENABLE, 
	"CREATED_ON" DATE NOT NULL ENABLE, 
	"UPDATED_ON" DATE NOT NULL ENABLE, 
	"VERSION_NO" NUMBER(10,0) NOT NULL ENABLE, 
	 CONSTRAINT "PK_BLINK_CUSTOMER" PRIMARY KEY ("BLINK_CUSTOMER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 NOLOGGING 
  STORAGE( INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBLS_BRANCHLESS"  ENABLE, 
	 CONSTRAINT "FK_CUST_BLINK_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "I8_MICROBANK_JS_DEV"."CUSTOMER" ("CUSTOMER_ID") ENABLE,
      	 CONSTRAINT "FK_CUST_BLINK_PIC_TYPE" FOREIGN KEY ("PICTURE_TYPE_ID")
	  REFERENCES "I8_MICROBANK_JS_DEV"."PICTURE_TYPE" ("PICTURE_TYPE_ID") ENABLE )



ALTER TABLE blink_customer
ADD CLS_RESPONSE_CODE varchar2(50);


ALTER TABLE blink_customer
ADD CUSTOMER_ACCOUNT_TYPE_ID NUMBER;


CREATE SEQUENCE BLINK_CUSTOMER_seq
   INCREMENT BY 2;


ALTER TABLE blink_customer
MODIFY VERSION_NO NUMBER(4,0);


ALTER TABLE blink_customer
DROP COLUMN picture_type_id;





CREATE TABLE "BLINK_CUSTOMER_PICTURE" 
   (	"BLINK_CUSTOMER_PICTURE_ID" NUMBER, 
	"CUSTOMER_ID" NUMBER, 
	"PICTURE_TYPE_ID" NUMBER NOT NULL ENABLE, 
	"PICTURE" BLOB, 
	"CREATED_BY" NUMBER(10,0) NOT NULL ENABLE, 
	"UPDATED_BY" NUMBER(10,0) NOT NULL ENABLE, 
	"CREATED_ON" DATE NOT NULL ENABLE, 
	"UPDATED_ON" DATE NOT NULL ENABLE, 
	"VERSION_NO" NUMBER(10,0) NOT NULL ENABLE, 
	"APPLICANT_TYPE_ID" NUMBER, 
	"APPLICANT_DETAIL_ID" NUMBER, 
	 CONSTRAINT "PK_BLINK_CUSTOMER_PICTURE" PRIMARY KEY ("BLINK_CUSTOMER_PICTURE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS NOLOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "TBLS_BRANCHLESS"  ENABLE, 
	 CONSTRAINT "FK_BLINK_CUST_PIC_CUSTOMER" FOREIGN KEY ("CUSTOMER_ID")
	  REFERENCES "I8_MICROBANK_JS_DEV"."CUSTOMER" ("CUSTOMER_ID") ENABLE, 
	 CONSTRAINT "FK_BLINK_CUST_PIC_PIC_TYPE" FOREIGN KEY ("PICTURE_TYPE_ID")
	  REFERENCES "I8_MICROBANK_JS_DEV"."PICTURE_TYPE" ("PICTURE_TYPE_ID") ENABLE
   )


  CREATE SEQUENCE BLINK_CUSTOMER_PICTURE_seq
   INCREMENT BY 2;


ALTER TABLE blink_customer
MODIFY latitude varchar2(30); 

ALTER TABLE blink_customer
MODIFY longitude varchar2(30);


alter table customer
add DUAL_NATIONALITY VARCHAR2(50);


alter table customer
add US_CITIZEN VARCHAR2(50);

alter table BLINK_CUSTOMER
add DUAL_NATIONALITY VARCHAR2(50);

alter table BLINK_CUSTOMER
add US_CITIZEN VARCHAR2(50);






 CREATE OR REPLACE FORCE VIEW "I8_MICROBANK_JS_DEV"."USER_INFO_LIST_VIEW" ("APP_USER_ID", "NAME", "ACCOUNT_STATE_ID", "FIRST_NAME", "LAST_NAME", "ADDRESS1", "ADDRESS2", "CITY", "DOB", "NIC", "IS_VERIFIED", "USER_ID", "MOBILE_NO", "STATE", "COUNTRY", "ACCOUNT_TITLE", "REGION_ID", "REGION_NAME", "AREA_ID", "AREA_NAME", "AREA_LEVEL_ID", "AREA_LEVEL_NAME", "DISTRIBUTOR_ID", "AGENT_NETWORK_NAME", "BUSINESS_CITY_ID", "BUSINESS_CITY_NAME", "ACCOUNT_PURPOSE_ID", "BUSINESS_NAME", "ACCOUNT_STATE_NAME", "SEGMENT", "IS_ACCOUNT_ENABLED", "IS_ACCOUNT_CLOSED", "USER_DEVICE_ACCOUNTS_ID", "FULL_ADDRESS", "FULL_ADDRESS_CITY", "FULL_NAME", "CUSTOMER_ACCOUNT_TYPE", "CUSTOMER_ACCOUNT_TYPE_ID", "IS_ACCOUNT_LOCKED", "IS_CREDENTIALS_EXPIRED", "DISTRICT", "ACCOUNT_OPENED_BY", "ACCOUNT_OPENER_NAME", "ACCOUNT_OPENER_ID", "ACCOUNT_OPENING_DATE", "REGISTRATION_STATE_ID", "REGISTRATION_STATE", "INITIAL_APP_FORM_NUMBER", "ACCOUNT_OPENING_METHOD_ID", "ACCOUNT_OPENING_METHOD_NAME", "UPDATED_ON", "UPDATED_BY", "MOBILE_NETWORK_ID", "CUST_MOBILE_NETWORK", "IBAN", "COMPANY_NAME", "STOCK_TRADING", "MUTUAL_FUNDS", "CLS_RESPONSE_CODE", "DUAL_NATIONALITY", "US_CITIZEN") AS 
  SELECT app_user.app_user_id,
mobile_type.NAME,
app_user.ACCOUNT_STATE_ID,
app_user.first_name,
app_user.last_name,
app_user.address1,
app_user.address2,
app_user.city,
app_user.dob,
app_user.nic,
app_user.is_verified,
user_device_accounts.user_id,
app_user.mobile_no,
app_user.state,
app_user.country,
app_user.FIRST_NAME || ' ' || app_user.LAST_NAME AS ACCOUNT_TITLE,
amd.region_id,
region.REGION_NAME,
amd.area_id,
area.name area_name,
amd.AREA_LEVEL_ID,
AREA_LEVEL.AREA_LEVEL_NAME,
amd.distributor_id,
DIST.NAME AS AGENT_NETWORK_NAME,
ad.city_id AS business_city_id,
city.name AS business_city_name,
cust.account_purpose_id,
CASE
WHEN (SELECT app_User_type_id
FROM app_user
WHERE app_user_id = cust.created_by) = 3
THEN
(SELECT business_name
FROM retailer_contact
WHERE retailer_contact_id IN
(SELECT retailer_contact_id
FROM app_user
WHERE app_user_id = cust.created_by))
ELSE
NULL
END
AS BUSINESS_NAME,
account_state.name AS account_state_name,
segment.name AS segment,
(CASE
WHEN user_device_accounts.is_account_enabled = 1
THEN
'ACTIVATED'
WHEN user_device_accounts.is_account_enabled = 0
THEN
'DE-ACTIVATED'
END)
AS is_account_enabled,
(CASE
WHEN app_user.IS_CLOSED_UNSETTLED = 0
AND app_user.IS_CLOSED_SETTLED = 0
THEN
'OPEN'
WHEN app_user.IS_CLOSED_UNSETTLED = 1
AND app_user.IS_CLOSED_SETTLED = 0
THEN
'CLOSED UNSETTLED'
WHEN app_user.IS_CLOSED_UNSETTLED = 1
AND app_user.IS_CLOSED_SETTLED = 1
THEN
'CLOSED SETTLED'
END)
AS is_account_closed,
user_device_accounts.user_device_accounts_id,
auna.FULL_ADDRESS,
auna.name AS FULL_ADDRESS_CITY,
auna.FULL_NAME,
cat.name AS customer_account_type,
cat.customer_account_type_id,
(CASE
WHEN user_device_accounts.IS_ACCOUNT_LOCKED = 0 THEN 'UNLOCKED'
WHEN user_device_accounts.IS_ACCOUNT_LOCKED = 1 THEN 'LOCKED'
END)
AS IS_ACCOUNT_LOCKED,
(CASE
WHEN user_device_accounts.IS_CREDENTIALS_EXPIRED = 0
THEN
'NOT EXPIRED'
WHEN user_device_accounts.IS_CREDENTIALS_EXPIRED = 1
THEN
'EXPIRED'
END)
AS IS_CREDENTIALS_EXPIRED,
(SELECT name
FROM district d, address a, customer_addresses c
WHERE d.district_id = a.district_id
AND a.address_id = c.address_id
AND c.address_type_id = 1
AND c.customer_id = cust.customer_id)
AS district,
CASE
WHEN (SELECT app_User_type_id
FROM app_user
WHERE app_user_id = cust.created_by) = 3
THEN
(SELECT user_id
FROM user_device_accounts
WHERE app_user_id = cust.created_by AND device_type_id = 5)
ELSE
(SELECT username
FROM app_user
WHERE app_user_id = cust.created_by)
END
AS account_opened_by,
CASE
WHEN (SELECT app_User_type_id
FROM app_user
WHERE app_user_id = cust.created_by) = 3
THEN
(SELECT NAME
FROM RETAILER_HIERARCHY_VIEW
WHERE app_user_id = cust.created_by)
ELSE
'Bank Back Office'
END
AS ACCOUNT_OPENER_NAME,
(SELECT app_User_id
FROM app_user
WHERE app_user_id = cust.created_by)
AS ACCOUNT_OPENER_ID,
cust.created_on AS account_opening_date,
app_user.REGISTRATION_STATE_ID,
REGISTRATION_STATE.name AS REGISTRATION_STATE,
NVL (cust.INITIAL_APP_FORM_NUMBER, KYC.INITIAL_APP_FORM_NUMBER)
AS INITIAL_APP_FORM_NUMBER,
CASE
WHEN cust.ACCOUNT_OPENING_METHOD_ID IS NULL THEN 1
ELSE cust.ACCOUNT_OPENING_METHOD_ID
END
AS ACCOUNT_OPENING_METHOD_ID,
NVL
(
(CASE
WHEN cust.ACCOUNT_OPENING_METHOD_ID IN (3, 4, 5)
THEN
'Web Service'
ELSE
(SELECT name
FROM ACCOUNT_OPENING_METHOD
WHERE ACCOUNT_OPENING_METHOD_ID =
cust.ACCOUNT_OPENING_METHOD_ID)
END),
(SELECT name
FROM ACCOUNT_OPENING_METHOD
WHERE ACCOUNT_OPENING_METHOD_ID = 1)
)
AS ACCOUNT_OPENING_METHOD_NAME,
cust.UPDATED_ON,
(SELECT username
FROM app_user
WHERE app_user_id = cust.updated_by)
updated_by,
mobnetwork.mobile_network_id,
app_user.cust_mob_network,
CUST.IBAN,
COMPANY_NAME,
CUST.STOCK_TRADING,
CUST.MUTUAL_FUNDS,
CUST.CLS_RESPONSE_CODE,
CUST.DUAL_NATIONALITY,
CUST.US_CITIZEN
FROM app_user,
app_user au,
REGISTRATION_STATE,
area,
area_level,
distributor dist,
mobile_type,
OLA_customer_account_type cat,
user_device_accounts,
app_user_name_addr_view auna,
customer cust,
ACCOUNT_STATE,
agent_merchant_detail amd,
segment,
KYC,
region,
retailer_contact rc,
retailer_contact_addresses rcadd,
address ad,
MOBILE_NETWORKS mobNetwork,
city
WHERE REGISTRATION_STATE.REGISTRATION_STATE_ID(+) =
app_user.REGISTRATION_STATE_ID
AND mobile_type.mobile_type_id(+) = app_user.mobile_type_id
AND cat.customer_account_type_id(+) = cust.customer_account_type_id
AND app_user.customer_id = cust.customer_id(+)
AND cust.INITIAL_APP_FORM_NUMBER = KYC.INITIAL_APP_FORM_NUMBER(+)
AND app_user.app_user_id = user_device_accounts.app_user_id(+)
AND app_user.app_user_type_id(+) = 2
AND app_user.ACCOUNT_STATE_ID = account_state.ACCOUNT_STATE_ID(+)
AND cust.segment_id = segment.segment_id(+)
AND user_device_accounts.device_type_id(+) = 5
AND auna.APP_USER_ID(+) = app_user.APP_USER_ID
AND AREA.AREA_Id(+) = amd.area_id
AND area_level.area_level_id(+) = amd.area_level_id
AND region.region_id(+) = amd.region_id
AND dist.distributor_id(+) = amd.distributor_id
AND amd.INITIAL_APP_FORM_NUMBER(+) = rc.initial_app_form_number
AND cust.created_by = au.app_user_id(+)
AND au.retailer_contact_id = rc.retailer_contact_id(+)
AND rc.retailer_contact_id = rcadd.retailer_contact_id(+)
AND rcadd.address_id = ad.address_id(+)
AND ad.city_id = city.city_id(+)
AND cat.IS_CUSTOMER_ACCOUNT_TYPE = 1
AND cat.CUSTOMER_ACCOUNT_TYPE_ID NOT IN (3, 9)
AND rcadd.address_type_id(+) = 5
AND app_user.CUST_MOB_NETWORK = mobnetwork.name(+);
