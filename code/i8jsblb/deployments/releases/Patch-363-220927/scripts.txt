
  CREATE OR REPLACE FORCE VIEW "BDE_KPI_REPORT_VIEW" ("APP_USER_ID", "AGENT_ID", "JSCASH_ACCOUNT_NO", "CORE_ACCOUNT_NO", "DEBIT_CARD_NUMBER", "CUSTOMER_ACCOUNT_TYPE_ID", "ACCOUNT_TYPE", "AGENT_BUSINESS_NAME", "FIRST_NAME", "LAST_NAME", "ADDRESS", "CNIC", "MOBILE_NO", "FILER_STATUS", "AGENT_NETWORK", "REIGON", "AREA", "AREA_LEVEL_NAME", "CITY", "TAX_REGIME", "SALE_USER", "AGENT_LEVEL", "IS_MAIN_AGENT", "BDE_EMPLOYEE_ID", "BDE_NAME", "DESIGNATION", "ITP_CHALLAN_TRANSACTIONS", "WALLET_OPENING", "UBP_TRANSACTIONS", "KPK_CHALLAN_TRANSACTIONS", "JCASH_ACCOUNT_STATUS", "CORE_ACCOUNT_STATUS", "CREDENTIAL_EXPIRED", "ACCOUNT_BALANCE", "ACCOUNT_OPENING_DATE") AS 
  SELECT C.APP_USER_ID,D.USER_ID AS AGENT_ID,C.MOBILE_NO AS JSCASH_ACCOUNT_NO,
U.ACCOUNT_NO AS CORE_ACCOUNT_NO ,'-' AS DEBIT_CARD_NUMBER , G.CUSTOMER_ACCOUNT_TYPE_ID AS CUSTOMER_ACCOUNT_TYPE_ID,G.NAME AS ACCOUNT_TYPE,
B.BUSINESS_NAME AS AGENT_BUSINESS_NAME, E.FIRST_NAME AS FIRST_NAME, E.LAST_NAME AS LAST_NAME,
M.FULL_ADDRESS AS ADDRESS, C.NIC AS CNICNO, C.MOBILE_NO,
    CASE NVL(C.IS_FILER,0) WHEN 0 THEN 'NON-FILER' ELSE 'FILER' END AS FILER_STATUS,
     J.NAME AS AGENT_NETWORK, K.REGION_NAME AS REIGON, N.NAME AS AREA,  O.AREA_LEVEL_NAME,
     P.NAME AS CITY,Q.NAME AS TAX_REGIME , C.FIRST_NAME || ' ' || C.LAST_NAME AS SALE_USER_NAME,
     R.NAME AS AGENT_LEVEL, CASE NVL(B.IS_HEAD,0) WHEN 0 THEN 'NO' ELSE 'YES' END AS  IS_MAIN_AGENT,
     T.EMPLOYEE_ID AS BDE_EMPLOYEE_ID, T.FIRST_NAME ||' '|| T.LAST_NAME AS BDE_NAME,
     S.ROLE_TITLE AS DESIGNATION, 
     (SELECT COUNT(*)   FROM TRANSACTION_DETAIL_MASTER WHERE MFS_ID = D.USER_ID AND PRODUCT_ID=5006 AND SUP_PROCESSING_STATUS_ID = 1 ) AS ITP_CHALLAN_TRANSACTIONS,
     (SELECT COUNT(*)   FROM TRANSACTION_DETAIL_MASTER WHERE MFS_ID = D.USER_ID AND PRODUCT_ID=2510763 AND SUP_PROCESSING_STATUS_ID = 1 ) AS WALLET_OPENING,
     UBP.UBP_COUNT AS UBP_TRANSACTIONS,     
     (SELECT COUNT(*)   FROM TRANSACTION_DETAIL_MASTER WHERE MFS_ID = D.USER_ID AND PRODUCT_ID=10245127) AS KPK_CHALLAN_TRANSACTIONS,
     CASE NVL(C.ACCOUNT_STATE_ID,0) WHEN 3 THEN 'ACTIVE' ELSE 'IN ACTIVE' END AS JCASH_ACCOUNT_STATUS,
     CASE NVL(U.IS_ACTIVE,0) WHEN 1 THEN 'ACTIVE' ELSE 'IN ACTIVE' END AS CORE_ACCOUNT_STATUS,
     CASE NVL(D.IS_CREDENTIALS_EXPIRED,0) WHEN 1 THEN 'YES' ELSE 'NO' END AS CREDENTIALS_EXPIRED,
      AC.BALANCE AS ACCOUNT_BALANCE,A.CREATED_ON AS ACCOUNT_OPENING_DATE
  FROM RETAILER A
    INNER JOIN RETAILER_CONTACT B ON A.RETAILER_ID = B.RETAILER_ID
    INNER JOIN APP_USER C ON B.RETAILER_CONTACT_ID = C.RETAILER_CONTACT_ID
    INNER JOIN USER_DEVICE_ACCOUNTS D ON C.APP_USER_ID = D.APP_USER_ID
    INNER JOIN ACCOUNT_HOLDER E ON E.MOBILE_NUMBER = C.MOBILE_NO
    INNER JOIN ACCOUNT AC ON AC.ACCOUNT_HOLDER_ID = E.ACCOUNT_HOLDER_ID
    INNER JOIN OLA_CUSTOMER_ACCOUNT_TYPE G ON AC.CUSTOMER_ACCOUNT_TYPE_ID = G.CUSTOMER_ACCOUNT_TYPE_ID
    INNER JOIN AGENT_MERCHANT_DETAIL I ON I.INITIAL_APP_FORM_NUMBER = B.INITIAL_APP_FORM_NUMBER
    INNER JOIN DISTRIBUTOR J ON I.DISTRIBUTOR_ID = J.DISTRIBUTOR_ID
    INNER JOIN REGION K ON K.REGION_ID = I.REGION_ID
    INNER JOIN RETAILER_CONTACT_ADDRESSES L ON L.RETAILER_CONTACT_ID = B.RETAILER_CONTACT_ID
    INNER JOIN ADDRESS M ON L.ADDRESS_ID = M.ADDRESS_ID
    INNER JOIN AREA N ON N.AREA_ID = I.AREA_ID
    INNER JOIN AREA_LEVEL O ON O.AREA_LEVEL_ID = I.AREA_LEVEL_ID
    INNER JOIN CITY P ON P.CITY_ID = M.CITY_ID
    INNER JOIN TAX_REGIME Q ON Q.TAX_REGIME_ID = B.TAX_REGIME_ID
    INNER JOIN DISTRIBUTOR_LEVEL R ON R.DISTRIBUTOR_LEVEL_ID = B.DISTRIBUTOR_LEVEL_ID
    INNER JOIN SALES_HIERARCHY S ON S.SALES_HIERARCHY_ID = B.SALES_HIERARCHY_ID
    INNER JOIN APP_USER T ON T.APP_USER_ID = S.BANK_USER_ID
    INNER JOIN ACCOUNT_INFO U ON U.CUSTOMER_MOBILE_NO = C.MOBILE_NO
    INNER JOIN (SELECT COUNT(*) UBP_COUNT, MFS_ID  
                  FROM TRANSACTION_DETAIL_MASTER TD
                 WHERE SUP_PROCESSING_STATUS_ID = 1 AND PRODUCT_ID IN (SELECT PRODUCT_ID 
                                        FROM PRODUCT 
                                       WHERE SUPPLIER_ID = '50063' AND APP_USER_TYPE_ID=3)
                 GROUP BY MFS_ID) UBP ON UBP.MFS_ID = D.USER_ID
WHERE D.DEVICE_TYPE_ID = 5
  AND L.ADDRESS_TYPE_ID = 5
  AND L.APPLICANT_TYPE_ID IS NULL
  AND U.PAYMENT_MODE_ID = 6;
