<?xml version="1.0" encoding="UTF-8"?>

<jboss-deployment-structure>
  <!-- Make sub deployments isolated by default, so they cannot see each others classes without a Class-Path entry -->
  <ear-subdeployments-isolated>true</ear-subdeployments-isolated>
  <!-- This corresponds to the top level deployment. For a war this is the war's module, for an ear -->
  <!-- This is the top level ear module, which contains all the classes in the EAR's lib folder     -->
  <deployment>
    <!-- Exclusions allow you to prevent the server from automatically adding some dependencies     -->
   	<!-- <exclusions>
	  	<module name="org.apache.commons.logging"/>
	  	<module name="org.jboss.log4j"/>
	  	<module name="org.jboss.logging"/>
	  	<module name="org.jboss.logmanager"/>
	  	<module name="org.slf4j"/>
	</exclusions> -->

	<exclusions>
	  	<module name="org.apache.log4j"/>
	</exclusions>
   	<!-- <exclude-subsystems>  
        <subsystem name="logging"/>
        <subsystem name="jsf"/>  
    </exclude-subsystems> -->

    <!-- This allows you to define additional dependencies, it is the same as using the Dependencies: manifest attribute -->
    
    <dependencies>
    <module name="org.bouncycastle" slot="main" export="true"/>
    <!-- <module name="deployment.activemq-ra.rar" export="true"/> -->
    </dependencies>
    
    <!-- These add additional classes to the module. In this case it is the same as including the jar in the EAR's lib directory -->
    <resources>
    <!-- 
      <resource-root path="my-library.jar" />
      -->
    </resources>
  </deployment>
  
</jboss-deployment-structure>