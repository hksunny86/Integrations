<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	     xmlns:tx="http://www.springframework.org/schema/tx"
	     xmlns:jee="http://www.springframework.org/schema/jee"
	     xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd">
  
	<!-- Transaction Manager related beans -->
	
	<!-- Construct Atomikos UserTransactionManager, needed to configure Spring -->
  <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init" destroy-method="close">
	<!--  when close is called, should we force transactions to terminate or not? -->
		<property name="forceShutdown"><value>true</value></property>
	</bean>

	<!-- Also use Atomikos UserTransactionImp, needed to configure Spring  --> 
	<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
	</bean>

	<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
	<bean id="springTransactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
		<property name="transactionManager"><ref bean="atomikosTransactionManager"  /></property>
		<property name="userTransaction"><ref bean="atomikosUserTransaction"  /></property>
	</bean>
  
  <!-- DataSource related beans -->
  
  <bean id="dataSource" class="com.atomikos.jdbc.SimpleDataSourceBean" init-method="init" destroy-method="close">
	  <!-- set an arbitrary but unique name for the datasource -->
    <property name="uniqueResourceName"><value>XADBMS</value></property>
    <!-- set the underlying driver class to use-->
    <property name="xaDataSourceClassName"><value>oracle.jdbc.xa.client.OracleXADataSource</value></property>
    <property name="xaDataSourceProperties">
    	<!-- set the driver-specific XADataSource properties (check your driver docs for more info)-->
    	<value>user=microbank_engine;password=microbank_engine;URL=jdbc:oracle:thin:@10.0.1.54:1521:dev</value>
    </property>   
       <!-- exclusive mode determines when connections are reused; safest choice is true -->
    <property name="exclusiveConnectionMode">
    	<value>true</value>
    </property>
    	<!-- how many connections in the pool? -->
    <property name="connectionPoolSize" value="3"/>
   </bean>
     
  <!-- Hibernate Session Factory -->
  
  <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>
    <property name="entityInterceptor" ref="customHibernateInterceptor"/>
    <property name="annotatedClasses" ref="annotatedClasses"/>
    <property name="hibernateProperties">
      <value>
      hibernate.dialect=org.hibernate.dialect.Oracle9Dialect
      hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
      hibernate.show_sql=false
      hibernate.bytecode.use_reflection_optimizer=true
      generate_statistics=false
      hibernate.format_sql=true
      hibernate.use_sql_comments=true
      hibernate.transaction.factory_class=org.hibernate.transaction.JTATransactionFactory
      hibernate.transaction.manager_lookup_class=com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
      </value>
    </property>
  </bean>
  
</beans>
