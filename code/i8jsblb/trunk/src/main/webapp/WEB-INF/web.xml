<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd" version="3.0">
  <display-name>i8Microbank</display-name>
  
  <context-param>
    <param-name>org.apache.myfaces.SERIALIZE_STATE_IN_SESSION</param-name>
    <param-value>false</param-value>
  </context-param>  
  
  <context-param>
    <param-name>org.jboss.jbossfaces.WAR_BUNDLES_JSF_IMPL</param-name>
    <param-value>true</param-value>
  </context-param>
  
   	<context-param>
		<param-name>javax.faces.FACELETS_REFRESH_PERIOD</param-name>
		<param-value>0</param-value>
  	</context-param>

	<context-param>
	    <param-name>facelets.SKIP_COMMENTS</param-name>
	    <param-value>true</param-value>
	</context-param>

	<context-param>
	    <param-name>javax.faces.PROJECT_STAGE</param-name>
	    <param-value>Production</param-value>
	</context-param>
  	
	<context-param>
	  	<description>State saving method: "client" or "server" (= default) See JSF Specification 2.5.3</description>
	  	<param-name>javax.faces.STATE_SAVING_METHOD</param-name>
	  	<param-value>server</param-value>
	</context-param>
  
  	<context-param>
    	<description>
		 This parameter tells MyFaces if javascript code should be allowed in
		 the rendered HTML output.
		 If javascript is allowed, command_link anchors will have javascript code
		 that submits the corresponding form.
		 If javascript is not allowed, the state saving info and nested parameters
		 will be added as url parameters.
		 Default is 'true'</description>
    	<param-name>org.apache.myfaces.ALLOW_JAVASCRIPT</param-name>
    	<param-value>true</param-value>
  	</context-param>
  	<context-param>
    	<description>
		 If true, rendered HTML code will be formatted, so that it is 'human-readable'
		 i.e. additional line separators and whitespace will be written, that do not
		 influence the HTML code.
		 Default is 'true'</description>
    	<param-name>org.apache.myfaces.PRETTY_HTML</param-name>
    	<param-value>true</param-value>
  	</context-param>
  	<context-param>
    	<param-name>org.apache.myfaces.DETECT_JAVASCRIPT</param-name>
    	<param-value>false</param-value>
  	</context-param>
  	<context-param>
    	<description>
		 If true, a javascript function will be rendered that is able to restore the
		 former vertical scroll on every request. Convenient feature if you have pages
		 with long lists and you do not want the browser page to always jump to the top
		 if you trigger a link or button action that stays on the same page.
		 Default is 'false'
		</description>
    	<param-name>org.apache.myfaces.AUTO_SCROLL</param-name>
    	<param-value>true</param-value>
  	</context-param>
  
  <listener>
    <listener-class>org.apache.myfaces.webapp.StartupServletContextListener</listener-class>
  </listener>
  <servlet>
    <servlet-name>Faces Servlet</servlet-name>
    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.jsf</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>Faces Servlet</servlet-name>
    <url-pattern>*.faces</url-pattern>
  </servlet-mapping>
<!--  <resource-ref>
    <description>JMS Connection Factory</description>
    <res-ref-name>java:/connectionFactory</res-ref-name>
    <res-type>javax.jms.QueueConnectionFactory</res-type>
    <res-auth>Container</res-auth>
    <res-sharing-scope>Shareable</res-sharing-scope>
  </resource-ref>-->
  <context-param>
    <param-name>theme</param-name>
    <param-value>simplicity</param-value>
  </context-param>
  
  <context-param>
    <param-name>javax.servlet.jsp.jstl.fmt.fallbackLocale</param-name>
    <param-value>en</param-value>
  </context-param>
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>
			/WEB-INF/applicationContext-*.xml,/WEB-INF/security.xml,/WEB-INF/server-*.xml
		</param-value>
  </context-param>
  <context-param>
    <param-name>extremecomponentsPreferencesLocation</param-name>
    <param-value>/extremecomponents.properties</param-value>
  </context-param>
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
  </filter>
  
  <filter>
    <filter-name>encodingFilter</filter-name>
    <filter-class>
			org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter>
    <filter-name>sitemesh</filter-name>
    <filter-class>
			org.extremecomponents.table.filter.SitemeshPageFilter
		</filter-class>
  </filter>
  <filter>
    <filter-name>eXtremeExport</filter-name>
    <filter-class>
			org.extremecomponents.table.filter.ExportFilter
		</filter-class>
  </filter>
  <filter>
    <filter-name>localeFilter</filter-name>
    <filter-class>
			com.inov8.framework.webapp.filter.LocaleFilter
		</filter-class>
  </filter>
  <filter>
    <filter-name>jmeFilter</filter-name>
    <filter-class>
			com.inov8.microbank.webapp.filter.MfsSupportFilter
		</filter-class>
  </filter>
  <filter>
    <filter-name>allPayWebLoginFilter</filter-name>
    <filter-class>
			com.inov8.microbank.webapp.filter.AllPayWebLoginFilter
		</filter-class>
  </filter>
  <filter>
  	<filter-name>ahSFRequestFilter</filter-name>
  	<filter-class>
  		com.inov8.microbank.webapp.filter.AHJSFRequestFilter
  	</filter-class>
  </filter>
  <!-- <filter>
  	<filter-name>xSSCleanFilter</filter-name>
	<display-name>xSSCleanFilter</display-name>
	<filter-class>com.inov8.microbank.webapp.filter.XSSCleanFilter</filter-class>
  </filter>
  <filter-mapping>
	<filter-name>xSSCleanFilter</filter-name>
	<url-pattern>/*</url-pattern>
  </filter-mapping> -->
  <filter-mapping>
    <filter-name>upload</filter-name>
    <url-pattern>/upload</url-pattern>
  </filter-mapping>
  <filter-mapping>
  	<filter-name>ahSFRequestFilter</filter-name>
  	<servlet-name>Faces Servlet</servlet-name>
  </filter-mapping>
  <filter-mapping>
    <filter-name>jmeFilter</filter-name>
    <url-pattern>*.me</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>jmeFilter</filter-name>
    <url-pattern>*.gw</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>jmeFilter</filter-name>
    <url-pattern>*.aw</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>allPayWebLoginFilter</filter-name>
    <url-pattern>*.aw</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>jmeFilter</filter-name>
    <url-pattern>*.sms</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/j_spring_security_check</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>*.html</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.html</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.jsf</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>encodingFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>localeFilter</filter-name>
    <url-pattern>*.html</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>localeFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>eXtremeExport</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  <filter-mapping>
    <filter-name>sitemesh</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  <listener> 
    <listener-class>
			net.sf.navigator.menu.MenuContextListener
		</listener-class>
  </listener>
  <listener>
    <listener-class>com.inov8.microbank.webapp.listener.I8MicrobankHttpSessionEventPublisher</listener-class>
  </listener>
  <listener>
    <listener-class>
			com.inov8.microbank.webapp.listener.StartupListener
		</listener-class>
  </listener>
  <listener>
    <listener-class>
			com.inov8.microbank.webapp.listener.UserCounterListener
		</listener-class>
  </listener>
  <listener>
    <listener-class>
			org.springframework.web.util.IntrospectorCleanupListener
		</listener-class>
  </listener>
  <listener>
    <listener-class>
			com.inov8.microbank.webapp.listener.TokenListener
		</listener-class>
  </listener>
  <servlet>
    <servlet-name>action</servlet-name>
    <servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
    <load-on-startup>2</load-on-startup>
  </servlet>
  <servlet>
    <description>
			JAX-WS endpoint - USSDRequestHandlerService
		</description>
    <display-name>USSDRequestHandlerService</display-name>
    <servlet-name>USSDRequestHandlerService</servlet-name>
    <servlet-class>
			com.sun.xml.ws.transport.http.servlet.WSServlet
		</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet>
    <description>
			JAX-WS endpoint - IVRRequestHandlerService
		</description>
    <display-name>IVRRequestHandlerService</display-name>
    <servlet-name>IVRRequestHandlerService</servlet-name>
    <servlet-class>
			com.sun.xml.ws.transport.http.servlet.WSServlet
		</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>IVRRequestHandlerService</servlet-name>
    <url-pattern>/IVRRequestHandlerPort</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>USSDRequestHandlerService</servlet-name>
    <url-pattern>/USSDRequestHandlerPort</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.html</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.me</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.gw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.aw</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>action</servlet-name>
    <url-pattern>*.sms</url-pattern>
  </servlet-mapping>
  <session-config>
    <session-timeout>30</session-timeout>
    <cookie-config>
      <http-only>true</http-only>
      <secure>false</secure>
    </cookie-config>
    <tracking-mode>COOKIE</tracking-mode>
  </session-config>
  <welcome-file-list>
    <welcome-file>/index.jsp</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>500</error-code>
    <location>/error.jsp</location>
  </error-page>
  <error-page>
    <error-code>400</error-code>
    <location>/index.jsp</location>
  </error-page>
  <error-page>
    <error-code>403</error-code>
    <location>/403.jsp</location>
  </error-page>
  <error-page>
    <error-code>404</error-code>
    <location>/404.jsp</location>
  </error-page>
   <error-page>
    <exception-type>javax.faces.application.ViewExpiredException</exception-type>
    <location>/login.jsp</location>
  </error-page>
  <listener>
    <listener-class>
			com.sun.xml.ws.transport.http.servlet.WSServletContextListener
		</listener-class>
  </listener>
  
  <!-- Spring HTTP Remoting Configuration -->
  	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/applicationContext-remoteDispather.xml</param-value>
		</init-param>
		<load-on-startup>0</load-on-startup>
	</servlet>

	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<url-pattern>/ws/*</url-pattern>
	</servlet-mapping>
  
</web-app>