<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
        xmlns="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:beans="http://www.springframework.org/schema/beans"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:jdbc="http://www.springframework.org/schema/jdbc"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <annotation-driven/>
    <beans:import resource="classpath:META-INF/cxf/cxf.xml"/>

    <beans:bean id="applicationProperties"
                class="com.inov8.integration.config.PropertyReader">
        <beans:property name="locations">
            <beans:list>
                <beans:value>classpath:application.properties</beans:value>
                <beans:value>classpath:channel/AppInSnap.properties</beans:value>
                <beans:value>classpath:channel/microbank.properties</beans:value>
                <beans:value>classpath:channel/APIGEE.properties</beans:value>
                <beans:value>classpath:channel/jsdebitcard.properties</beans:value>
                <beans:value>classpath:channel/CLSJS.properties</beans:value>
                <beans:value>classpath:channel/jsbookme.properties</beans:value>
                <beans:value>classpath:channel/eocean.properties</beans:value>
                <beans:value>classpath:channel/jsdebitcardapi.properties</beans:value>
                <beans:value>classpath:channel/t24api.properties</beans:value>
                <beans:value>classpath:channel/vrg-echallan.properties</beans:value>
                <beans:value>classpath:channel/ETPaymentCollection.properties</beans:value>
                <beans:value>classpath:channel/M3Tech.properties</beans:value>
                <beans:value>classpath:channel/zindigi.properties</beans:value>
                <beans:value>classpath:channel/merchantcamping.properties</beans:value>
                <beans:value>classpath:channel/offlinebiller.properties</beans:value>
                <beans:value>classpath:channel/refferalCustomer.properties</beans:value>
                <beans:value>classpath:channel/CustomerDeviceVerification.properties</beans:value>
                <beans:value>classpath:channel/sendPushNotification.properties</beans:value>
                <beans:value>classpath:channel/optasia.properties</beans:value>
                <beans:value>classpath:channel/tasdeeq.properties</beans:value>
                <beans:value>classpath:channel/brandverse.properties</beans:value>
                <beans:value>classpath:channel/raast.properties</beans:value>
                <beans:value>classpath:channel/debitCard.properties</beans:value>
                <beans:value>classpath:channel/esb.properties</beans:value>
                <beans:value>classpath:channel/onelink.properties</beans:value>
                <beans:value>classpath:channel/saf.properties</beans:value>
                <beans:value>classpath:channel/fcy.properties</beans:value>
                <beans:value>classpath:channel/merchant.properties</beans:value>
                <beans:value>classpath:channel/wasa.properties</beans:value>
                <beans:value>classpath:channel/lending.properties</beans:value>
                <beans:value>classpath:channel/islamicSaving.properties</beans:value>
                <beans:value>classpath:channel/sbp.properties</beans:value>
                <beans:value>classpath:channel/crp.properties</beans:value>
                <beans:value>classpath:channel/estatement.properties</beans:value>

                <!--                <value>classpath:channel/AMA.properties</value>-->
            </beans:list>
        </beans:property>
        <beans:property name="ignoreUnresolvablePlaceholders" value="true"/>
    </beans:bean>

    <context:component-scan base-package="com.inov8.integration"/>

    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <beans:import resource="channel/vrg-echallan.xml"/>
    <beans:import resource="channel/ETPaymentCollection.xml"/>
    <beans:import resource="channel/M3Tech.xml"></beans:import>


    <!-- I8SB_DEV HikariCP configuration START -->
    <beans:bean id="I8SBDBHikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <beans:property name="poolName" value="HikariCP"/>
        <beans:property name="connectionTestQuery" value="SELECT 1 FROM DUAL"/>
        <beans:property name="connectionInitSql" value="SELECT 1 FROM DUAL"/>
        <beans:property name="dataSourceClassName" value="oracle.jdbc.pool.OracleDataSource"/>
        <beans:property name="maximumPoolSize" value="100"/>
        <beans:property name="minimumIdle" value="20"/>
        <beans:property name="idleTimeout" value="300000"/>
        <beans:property name="connectionTimeout" value="30000"/>
        <beans:property name="validationTimeout" value="10000"/>
        <beans:property name="maxLifetime" value="600000"/>
        <beans:property name="dataSourceProperties">
            <beans:props>
                <beans:prop key="url">jdbc:oracle:thin:@${i8sb.db.server}:${i8sb.db.port}:${i8sb.db.sid}</beans:prop>
                <beans:prop key="user">${i8sb.db.username}</beans:prop>
                <beans:prop key="password">${i8sb.db.password}</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>


    <beans:bean id="I8SBDBDataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <beans:constructor-arg ref="I8SBDBHikariConfig"/>
    </beans:bean>

    <beans:bean id="I8SBDBTransactionManager"
                class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <beans:property name="dataSource" ref="I8SBDBDataSource"></beans:property>
        <beans:property name="defaultTimeout" value="10"></beans:property>
    </beans:bean>
    <tx:annotation-driven transaction-manager="I8SBDBTransactionManager"/>

    <beans:bean id="I8SBDBJdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <beans:property name="dataSource" ref="I8SBDBDataSource"/>
    </beans:bean>
    <!-- I8SB_DEV HikariCP configuration END -->

    <beans:bean id="inInterceptor" class="org.apache.cxf.interceptor.LoggingInInterceptor">
        <beans:property name="prettyLogging" value="true"/>
    </beans:bean>
    <beans:bean id="outInterceptor" class="org.apache.cxf.interceptor.LoggingOutInterceptor">
        <beans:property name="prettyLogging" value="true"/>
    </beans:bean>


    <!-- ######################################################## -->
    <!-- EXPOSING SPRING BEAN VIA HTTPINVOKER SPRING REMOTING -->
    <!-- ######################################################## -->

    <beans:bean name="/api"
                class="org.springframework.remoting.httpinvoker.HttpInvokerServiceExporter">
        <beans:property name="service" ref="i8SBSwitchControllerImpl"/>
        <beans:property name="serviceInterface"
                        value="com.inov8.integration.i8sb.controller.I8SBSwitchController"/>
    </beans:bean>

</beans:beans>
